name: Mass Rebuild Bisect

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      pkg:
        description: "The name of the Fedora package build that you want to bisect."
        required: true
        type: string
      issue:
        description: "The id of the issue to update with the bisect results."
        required: false
        type: string
        default: 0
      arch:
        description: "The architecture to test"
        type: choice
        default: x86_64
        options:
          - x86_64
          - aarch64
          - ppc64le
          - s390x
  workflow_call:
    inputs:
      pkg:
        description: "The name of the Fedora package build that you want to bisect."
        required: true
        type: string
      issue:
        description: "The id of the issue to update with the bisect results."
        required: false
        type: string
        default: 0
      arch:
        description: "The architecture to test"
        type: string
        default: x86_64

jobs:
  mass-rebuild-bisect-setup:
    runs-on: ubuntu-24.04
    outputs:
      runs-on: ${{ steps.vars.outputs.runs-on }}
      emulated: ${{ steps.vars.outputs.emulated }}
    steps:
      - name: "Setup"
        id: vars
        run: |
          runs_on="ubuntu-24.04"
          case "${{ inputs.arch }}" in
            aarch64)
              runs_on="$runs_on-arm"
              emulated="false"
              ;;
            ppc64le|s390x)
              emulated="true"
              ;;
            x86_64)
              emulated="false"
              ;;
          esac
          echo "runs-on=$runs_on" >> $GITHUB_OUTPUT
          echo "emulated=$emulated" >> $GITHUB_OUTPUT


  mass-rebuild-bisect:
    runs-on: ${{ needs.mass-rebuild-bisect-setup.outputs.runs-on }}
    needs:
      - mass-rebuild-bisect-setup
    outputs:
      result: ${{ steps.result.outputs.result }}
    container:
      image: ${{ (needs.mass-rebuild-bisect-setup.outputs.emulated == 'false' && format('ghcr.io/{0}/llvm-snapshots-reproducer:{1}', github.repository_owner, inputs.arch)) || null}}
    steps:
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 8G
          key: bisect
      - working-directory: /root/llvm-project/
        if: needs.mass-rebuild-bisect-setup.outputs.emulated == 'false'
        run: |
          git fetch origin
          bash bisect.sh ${{ inputs.pkg }}
          git bisect log > $GITHUB_WORKSPACE/bisect.log || true

      - if: needs.mass-rebuild-bisect-setup.outputs.emulated == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          mkdir -p container-output
          podman run --arch ${{ inputs.arch }} -v $GITHUB_WORKSPACE/container-output:/root/llvm-project/container-output \
            "ghcr.io/${{ github.repository_owner }}/llvm-snapshots-reproducer:${{ inputs.arch }}" \
            /usr/bin/bash -c "git fetch origin && bash bisect.sh ${{ inputs.pkg }} && (git bisect log > container-output/bisect.log || true)"

          if [ -e container-output/bisect.log ]; then
            mv container-output/bisect.log .
          fi

      - if: always()
        id: result
        run: |
          if [ -s bisect.log ]; then
            echo "result=Bisect Complete" >> "$GITHUB_OUTPUT"
          else
            echo "result=False Positive" >> "$GITHUB_OUTPUT"
            touch bisect.log
          fi

      - name: Upload bisect.log
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: bisect-${{ inputs.pkg }}-${{ inputs.arch }}
          path: bisect.log
          retention-days: 14

  mass-rebuild-bisect-report:
    if: >-
      always() &&
      inputs.issue != 0
    runs-on: ubuntu-24.04
    needs:
      - mass-rebuild-bisect
    permissions:
      issues: write
    steps:
      - name: Download bisect.log
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: bisect-${{ inputs.pkg }}-${{ inputs.arch }}
      - uses: actions/github-script@v7
        with:
          script: |
            const jobs = await github.rest.actions.listJobsForWorkflowRunAttempt({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
              attempt_number: process.env.GITHUB_RUN_ATTEMPT
            });
            var fs = require('fs');
            const bisect_log = await fs.readFileSync('bisect.log');
            const result_string = "${{ needs.mass-rebuild-bisect.outputs.result }}";
            const package = '${{ inputs.pkg }}'
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: '${{ inputs.issue }}',
              body: `[Bisect](${jobs.data.jobs[0].html_url}) complete for: ${package}\n\n${result_string}\n\n${bisect_log}`
            })

            if (result_string == "False Positive") {
              issue = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: '${{ inputs.issue }}'
              })

              console.log(issue);
              var body = issue.data.body.replace(`- [ ] [${package}]`,`- [x] [${package}]`)

              github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: '${{ inputs.issue }}',
                body: body
              })
            }
